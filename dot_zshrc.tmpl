if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
    source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

cmd_exists() {
  command -v "$@" >/dev/null 2>&1
}

MAILCHECK=0

export ZSH="$HOME/.oh-my-zsh"
export ZSH_COMPDUMP="$HOME/.oh-my-zsh/cache/.zcompdump-$HOST"

{{ if (or (eq .chezmoi.hostname "selBook") (eq .chezmoi.hostname "SelPC")) -}}

export GPGKEY="05CF2413634FB03227E5E82CA77C112DFE95BD68"
export GPG_TTY="$(tty)"

{{ end -}}

if cmd_exists fzf; then
    export FZF_BASE="$(command -v fzf)"
    export FZF_DEFAULT_COMMAND="fd --type f --strip-cwd-prefix"
    export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
fi

export LANG="en_US.UTF-8"

export EDITOR="nvim"
export SUDO_EDITOR="$EDITOR"

{{ if eq .chezmoi.os "darwin" -}}

BREW_DIR="$(brew --prefix)"
export PATH="$BREW_DIR/bin:$PATH"
export PATH="$BREW_DIR/opt/python/libexec/bin:$PATH"
export PATH="$BREW_DIR/opt/unbound/sbin:$PATH"

export MAMBA_EXE="$BREW_DIR/bin/micromamba";
export PNPM_HOME="$HOME/Library/pnpm"

ZSH_TMUX_ITERM2="true"
{{ else if eq .chezmoi.os "linux" -}}

export MAMBA_EXE="$HOME/.local/bin/micromamba"
export PNPM_HOME="$HOME/.local/share/pnpm"
export PATH="/opt/cuda/bin:$PATH"

export PATH="$HOME/.local/bin:$PATH"

{{ end -}}

__mamba_setup="$("$MAMBA_EXE" shell hook --shell zsh --prefix "$MAMBA_ROOT_PREFIX" 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__mamba_setup"
else
    if [ -f "$HOME/.micromamba/etc/profile.d/micromamba.sh" ]; then
        . "$HOME/.micromamba/etc/profile.d/micromamba.sh"
    else
        export  PATH="$HOME/.micromamba/bin:$PATH"
    fi
fi
unset __mamba_setup

export MAMBA_ROOT_PREFIX="$HOME/.micromamba"

export PATH="$PNPM_HOME:$PATH"
export PATH="$HOME/.deno/bin:$PATH"

ZSH_TMUX_FIXTERM_WITH_256COLOR="true"

ZSH_THEME="powerlevel10k/powerlevel10k"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

HIST_STAMPS="dd.mm.yyyy"

plugins=(sudo zsh-syntax-highlighting fzf ng zsh-interactive-cd tmux colored-man-pages git)

zstyle ':completion:*' menu select

{{ if eq .chezmoi.os "darwin" -}}

if cmd_exists docker; then
    source $HOME/.docker/init-zsh.sh || true
fi
{{ end -}}

source $ZSH/oh-my-zsh.sh

if cmd_exists zoxide; then
    eval "$(zoxide init zsh)"
fi

########## ALIASES ##########
{{ if eq .chezmoi.os "darwin" -}}

alias b='brew'
alias bi='brew info'
alias bs='brew search'
alias bb='brew install'
alias bu='brew uninstall'
alias bl='brew list'

alias df='df -h'
alias network='networksetup -listallhardwareports'
alias checksum='shasum'
alias ssdcheck='smartctl -a disk0'
alias speedtest='speedtest --secure'
alias sudoedit='function _sudoedit(){sudo -e "$1";};_sudoedit'
{{ else if eq .chezmoi.os "linux" -}}

if cmd_exists xclip; then
    alias pbcopy='xclip -selection clipboard'
    alias pbpaste='xclip -selection clipboard -o'
elif cmd_exists xsel; then
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
fi
{{ end -}}

alias 7x='7z x'
alias lg='lazygit'
alias dotc='git --git-dir=$HOME/.dotfiles --work-tree=$HOME'
alias nv='neovide --frame=buttonless'
alias np='pnpm'
alias src='source $HOME/.zshrc'
alias cm='chezmoi'
alias mm='micromamba'
alias fz="fzf --preview 'bat --color=always --style=numbers --line-range=:500 {}'"

alias l='lsd'
alias ll='lsd -l'
alias la='lsd -a'
alias lla='lsd -la'
alias lt='lsd --tree'

{{ if eq .chezmoi.os "darwin" -}}

# https://stackoverflow.com/a/29403520
bindkey "^U" backward-kill-line
bindkey "^X\\x7f" backward-kill-line
bindkey "^X^_" redo

{{ end -}}

autoload -Uz compinit && compinit
autoload -Uz promptinit && promptinit

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
